//    operation RunModularExponentiation() : Unit {
//         let n = 7;
//         let nBits = BitSizeI(3);
//         use (x, out, outMult) = (Qubit[nBits], Qubit[nBits], Qubit[nBits * 2]);
//     //     InitializeQubitsFromInteger(n, x);
//     //     InitializeQubitsFromInteger(0, out);
//     //     DumpRegister(x);
//     //     DumpRegister(out);
//     //  //   ApplyToEach(H, x);
//     //     DumpRegister(x);
//     //     Adder(x, out);
//     //     Adder(x, out);
//     //     DumpRegister(out);
//     //     let integerResult = MeasureInt(out);
//         InitializeQubitsFromInteger(0, x);
//         InitializeQubitsFromInteger(2, out);
//         DumpRegister(x);
//         let xResult = MeasureInt(x);
//         Message($"output {xResult}");
//      //   DumpRegister(out);
//      //   ApplyToEach(H, x);
//    //  H(x[0]);
//         DumpMachine();
//      //   QuantumMultiplier(out, x, outMult);
//   //      DumpRegister(outMult);
//      //   DumpRegister(out);
//    //     QuantumAdder(x, out, outMult);
//         DumpMachine();
//         let integerResult = MeasureInt(outMult);
//         Message($"output {integerResult}");
//        // DumpMachine();
//         ResetAll(x);
//         ResetAll(out);
//         ResetAll(outMult);
//     }